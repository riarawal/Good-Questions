Input: 765
Output: 567


---------------


import java.util.*;
import java.util.*;

public class Main{

public static void main(String[] args) {

 //write your code here.
   Scanner sc=new Scanner(System.in);
   int s=sc.nextInt();
   //String t=sc.nextLine();
   
   int z=smallest( s);
   System.out.println(z);
   

   
 }
  static int smallest(int num) 
    { 
        
        int[] freq = new int[10]; 
       
       
        while (num > 0) 
        { 
            int d = num % 10;  
            freq[d]++; 
            num = num / 10; 
        } 
       
       
        int result = 0; 
        for (int i = 1 ; i <= 9 ; i++) 
        { 
            if (freq[i] != 0) 
            { 
                result = i; 
                freq[i]--; 
                break; 
            } 
        } 
       
       
        for (int i = 0 ; i <= 9 ; i++) 
            while (freq[i]-- != 0) 
                result = result * 10 + i; 
       
        return result; 
    } 

}


---------

import java.util.*;

public class Main{

public static void main(String[] args) {

 //write your code here.
   Scanner sc=new Scanner(System.in);
   String num=sc.nextLine();
  // int n=sc.nextInt();
   
  
   System.out.println( findSmallestPermutation(num));
 //String s=(char)66+"asdf";
 // System.out.println(s);
}

   
 // static String DecttoNBase(int num, int n)
  // {
     static char[] findSmallestPermutation(String s1) 
    { 
        // sort the string 
        char s[] = s1.toCharArray(); 
        Arrays.sort(s); 
       
        // check for leading zero in string 
        // if there are any leading zeroes, 
        // swap the first zero with first non-zero 
        // number 
        int i = 0; 
        while (s[i] == '0')  
            i++; 
           
        char temp = s[0]; 
        s[0] = s[i]; 
        s[i] = temp; 
        return s; 
    
   }
}
