You are given an array A1,A2...AN. You have to tell how many pairs (i, j) exist such that 1 ≤ i < j ≤ N and Ai XOR Aj is odd.

Input and Output
First line T, the number of testcases. Each testcase: first line N, followed by N integers in next line. For each testcase, print the required answer in one line.

Constraints
1 ≤ T ≤ 10
1 ≤ N ≤ 105
0 ≤ Ai ≤ 109

SAMPLE INPUT 
2
3
1 2 3
4
1 2 3 4
SAMPLE OUTPUT 
2
4
Explanation
For first testcase: 1 XOR 2 is 3 and 2 XOR 3 is 1. So, 2 valid pairs. For second testcase: 1 XOR 2 is 3 and 2 XOR 3 is 1 and 1 XOR 4 is 5 and 3 XOR 4 is 7. So, 4 valid pairs.


---------------------


/* IMPORTANT: Multiple classes and nested static classes are supported */

/*
 * uncomment this if you want to read input.
//imports for BufferedReader
import java.io.BufferedReader;
import java.io.InputStreamReader;

//import for Scanner and other utility classes
import java.util.*;
*/

// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail
import java.util.*;
import java.util.*;
class TestClass {
    public static void main(String args[] ) throws Exception {
        /* Sample code to perform I/O:
         * Use either of these methods for input

        //BufferedReader
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        String name = br.readLine();                // Reading input from STDIN
        System.out.println("Hi, " + name + ".");    // Writing output to STDOUT

        //Scanner
        Scanner s = new Scanner(System.in);
        String name = s.nextLine();                 // Reading input from STDIN
        System.out.println("Hi, " + name + ".");    // Writing output to STDOUT

        */

        // Write your code here

        

//public class Main{

//public static void main(String[] args) {

 //write your code here.
   Scanner sc=new Scanner(System.in);
   int t=sc.nextInt();
   
   //String t=sc.nextLine();
  
   for(int k=0;k<t;k++)
   {
       int n=sc.nextInt();
        int[] a=new int[n];
   for (int i = 0 ; i <n ; i++) 
   {
    a[i]=sc.nextInt();
   }
  //int k=sc.nextInt(); 
  //findXor(a);
  countOddXORPair(a);
   }
 // System.out.println(ans);
   
 }
 static void findXor(int arr[]) 
    { 
      
        int count=0;
        int xoR=0;
        for(int j=0;j<arr.length-1;j++)
        {  
        for (int i = j+1; i < arr.length; i++) { 
           if(arr[i]%2==0 && arr[j]%2==0)continue;
           
           xoR = arr[j];
           xoR = xoR ^ arr[i];     
            if(xoR%2==1)count++;     
        }
        }
      System.out.println(count);   

    }
private static void countOddXORPair(int[] arr) {
long countOdd=0, countEven =0;
for (int num : arr) {
if(num % 2 ==0){countEven++;}
else{countOdd++;}
}
System.out.println( countOdd * countEven);
}
}

